{"version":3,"names":[],"mappings":"","sources":["app.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar MAP_MODE = require('./constants/map-mode.json');\n\nvar keys = require('./config/keys.json');\nvar maps = require('./core/maps');\n\nvar mode = MAP_MODE.DEFAULT;\n\nvar currentItem;\nvar currentLatLng;\n\nvar map;\nvar btnMeasure, btnClear;\n\nvar init = function(status){\n  if(status.success){\n    initMap();\n    initControl();\n  }else{\n    document.getElementById('map').innerHTML = status.message;\n  }\n};\n\nvar initMap = function(){\n  map = new maps.Map(document.getElementById('map'), {\n    center: { lat: 37.3594556, lng: 127.103126 },\n    zoom: 15,\n    draggableCursor: 'default',\n    zoomControl: true,\n    zoomControlOptions: {\n      position: maps.$('ControlPosition').RIGHT_TOP\n    },\n    scaleControl: false,\n    streetViewControl: false,\n    disableDoubleClickZoom: true\n  });\n\n  document.addEventListener('touchmove', function(event){ event.preventDefault(); }, false);\n};\n\nvar initControl = function(){\n  var makeControlButton = function(label){\n    var div = document.createElement('div');\n\n    div.className = 'control-button';\n    div.innerHTML = label;\n\n    return div;\n  };\n\n  btnMeasure = makeControlButton('거리재기');\n  btnClear = makeControlButton('지우기');\n\n  btnMeasure.addEventListener('click', onClickControlMeasure, false);\n  btnClear.addEventListener('click', onClickControlClear, false);\n\n  map.addControl(btnMeasure, maps.$('ControlPosition').RIGHT_TOP);\n  map.addControl(btnClear, maps.$('ControlPosition').RIGHT_TOP);\n};\n\nvar initModeMeasure = function(){\n  mode = MAP_MODE.MEASURE;\n\n  btnMeasure.className += ' selected';\n\n  map.setCursor('pointer');\n  map.setDraggable(false);\n\n  map.addEventListener('mousemove', onMouseMoveMap);\n  map.addEventListener('mousedown', onMouseDownMap);\n  map.addEventListener('mouseup', onMouseUpMap);\n  map.addEventListener('rightclick', onRightClickMap);\n};\n\nvar initModeDefault = function(){\n  mode = MAP_MODE.DEFAULT;\n\n  btnMeasure.className = btnMeasure.className.replace(' selected', '');\n\n  if(currentItem){\n    currentItem.completeEdit();\n    currentItem = null;\n  }\n\n  map.setCursor('default');\n  map.setDraggable(true);\n\n  map.removeEventListener('mousemove', onMouseMoveMap);\n  map.removeEventListener('mousedown', onMouseDownMap);\n  map.removeEventListener('mouseup', onMouseUpMap);\n  map.removeEventListener('rightclick', onRightClickMap);\n};\n\nvar onClickControlMeasure = function(event){\n  event.preventDefault();\n\n  if(mode == MAP_MODE.MEASURE){\n    initModeDefault();\n  }else{\n    initModeMeasure();\n  }\n};\n\nvar onClickControlClear = function(event){\n  event.preventDefault();\n\n  map.removeChildAll();\n\n  currentItem = null;\n\n  initModeDefault();\n};\n\nvar onMouseMoveMap = function(event){\n  currentLatLng = event.latLng;\n};\n\nvar onMouseDownMap = function(event){\n  currentLatLng = event.latLng;\n};\n\nvar onMouseUpMap = function(event){\n  currentLatLng = event.latLng;\n\n  if(!currentItem){\n    currentItem = new maps.Item(currentLatLng);\n\n    currentItem.addEventListener('removeSelected', function(){\n      map.removeChild(this);\n    }, currentItem);\n\n    map.addChild(currentItem);\n\n    updateCurrentItem();\n  }\n\n  currentItem.addPosition(currentLatLng);\n};\n\nvar onRightClickMap = function(){\n  if(currentItem){\n    currentItem.addPosition(currentLatLng);\n\n    initModeDefault();\n  }\n};\n\nvar updateCurrentItem = function(){\n  if(currentItem){\n    currentItem.updateAim(currentLatLng);\n\n    requestAnimFrame(updateCurrentItem);\n  }\n};\n\nmaps(keys.API, init);\n},{\"./config/keys.json\":2,\"./constants/map-mode.json\":3,\"./core/maps\":4}],2:[function(require,module,exports){\nmodule.exports={\n  \"API\": \"AIzaSyDeyZVdO87BXvroGe_yP-fXNU_VxdQTFok\"\n}\n},{}],3:[function(require,module,exports){\nmodule.exports={\n  \"DEFAULT\": \"DEFAULT\",\n  \"MEASURE\": \"MEASURE\"\n}\n},{}],4:[function(require,module,exports){\n// polyfill\nwindow['requestAnimFrame'] = (function(){\n  return window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    function(callback){\n      window.setTimeout(callback, 16);\n    };\n})();\n\nvar KEY, MAPS;\n\nvar queue = [];\nvar status;\n\nvar maps = function(key, func){\n  func ? (KEY = key) : (func = key);\n  queue ? (queue[queue.length] = func) : func(status);\n};\n\nvar fn = function(key, value){\n  maps[key] = value;\n};\n\nvar wait = setInterval(function(){\n  switch(document.readyState){\n    case 'complete':\n    case 'loaded': break;\n    default: return;\n  }\n\n  clearInterval(wait);\n\n  var script = document.createElement('script');\n\n  var init = function(){\n    MAPS = google.maps;\n\n    fn('$', function(key){\n      return MAPS[key];\n    });\n\n    fn('Map', require('../view/map')(MAPS));\n    fn('Item', require('../view/item')(MAPS));\n\n    status = { success: true };\n\n    start();\n  };\n\n  var start = function(){\n    var temp = queue, index = 0, count = temp.length;\n    queue = null;\n\n    while(index < count){\n      temp[index++](status);\n    }\n  };\n\n  // IE8 이하 또는 호환성 보기 설정\n  if(!document.createElement('canvas').getContext){\n    status = { success: false, message: '지원하지 않는 브라우저' };\n\n    start();\n\n    return;\n  }\n\n  document.getElementsByTagName('head')[0].appendChild(script);\n\n  script.type = 'text/javascript';\n  script.onload = init;\n  script.src = 'https://maps.googleapis.com/maps/api/js?key=' + KEY;\n}, 1);\n\n\nmodule.exports = maps;\n},{\"../view/item\":6,\"../view/map\":7}],5:[function(require,module,exports){\nvar EventDispatcher;\nvar fn;\n\nEventDispatcher = function(){\n  this.events = {};\n};\n\nfn = EventDispatcher.prototype;\n\nfn.addEventListener = function(type, listener, context){\n  if(!this.events[type]) this.events[type] = {};\n\n  this.events[type][listener] = { listener: listener, context: context || this };\n};\n\nfn.removeEventListener = function(type, listener){\n  if(listener){\n    delete this.events[type][listener];\n  }else{\n    delete this.events[type];\n  }\n};\n\nfn.dispatchEvent = function(type, data){\n  var listeners = this.events[type];\n  var key, listener;\n\n  for(key in listeners){\n    listener = listeners[key];\n\n    listener.listener.call(listener.context, { type: type, data: data });\n  }\n};\n\nmodule.exports = EventDispatcher;\n},{}],6:[function(require,module,exports){\nvar EventDispatcher = require('../event/event-dispatcher');\n\nvar itemIndex = 0;\n\nvar DEFAULT_OPTION_POLYLINE = {\n  strokeColor: '#FF0000',\n  strokeOpacity: 1.0,\n  strokeWeight: 3,\n  clickable: false,\n  draggable: false,\n  editable: false\n};\n\nvar distance = function(from, to){\n  var R = 6371;\n  var lat1 = from.lat() * Math.PI / 180;\n  var lat2 = to.lat() * Math.PI / 180;\n  var lon1 = from.lng() * Math.PI / 180;\n  var lon2 = to.lng() * Math.PI / 180;\n\n  var d = Math.acos(Math.sin(lat1) * Math.sin(lat2) + Math.cos(lat1) * Math.cos(lat2) * Math.cos(lon2 - lon1)) * R;\n\n  var factor = Math.pow(10, 2);\n  var increment = 5 / (factor * 10);\n\n  return Math.floor((d + increment) * factor) / factor;\n};\n\nmodule.exports = function(MAPS){\n  var Item, fn;\n\n  Item = function(latLng){\n    this.constructor.call(this);\n\n    this.latLngs = [];\n\n    this.polyline = new MAPS.Polyline(DEFAULT_OPTION_POLYLINE);\n    this.path = this.polyline.getPath();\n    this.path.push(latLng);\n\n    this.guidePolyline = new MAPS.Polyline(DEFAULT_OPTION_POLYLINE);\n    this.guidePath = this.guidePolyline.getPath();\n    this.guidePath.push(latLng);\n    this.guidePath.push(latLng);\n\n    this.map = null;\n    this.marker = null;\n    this.infoWindow = null;\n\n    this.markerHandler = null;\n    this.infoWindowHandler = null;\n  };\n\n  fn = Item.prototype = new EventDispatcher;\n\n  fn.addPosition = function(latLng){\n    this.latLngs.push(latLng);\n    this.path.push(latLng);\n\n    this.guidePath.setAt(0, latLng);\n  };\n\n  fn.updateAim = function(latLng){\n    this.guidePath.setAt(1, latLng);\n  };\n\n  fn.completeEdit = function(){\n    var isInfoOpen = true;\n    var _this = this;\n\n    this.marker = new MAPS.Marker({\n      position: this.latLngs[this.latLngs.length - 1]\n    });\n\n    this.infoWindow = new MAPS.InfoWindow({\n      content: this.getDistance()\n    });\n\n    this.markerHandler = MAPS.event.addListener(this.marker, 'click', function(){\n      isInfoOpen = !isInfoOpen;\n\n      if(isInfoOpen){\n        _this.infoWindow.setZIndex(++itemIndex);\n        _this.infoWindow.open(_this.map, _this.marker);\n      }else{\n        _this.infoWindow.close();\n      }\n    });\n\n    this.infoWindowHandler = MAPS.event.addListener(this.infoWindow, 'closeclick', function(){\n      _this.dispatchEvent('removeSelected');\n    });\n\n    this.marker.setZIndex(++itemIndex);\n    this.infoWindow.setZIndex(++itemIndex);\n\n    this.marker.setMap(this.map);\n    this.infoWindow.open(this.map, this.marker);\n\n    this.guidePolyline.setMap(null);\n  };\n\n  fn.getDistance = function(){\n    var index = 0, count = this.latLngs.length - 1;\n    var dist = 0;\n\n    for( ; index < count; index++){\n      dist += distance(this.latLngs[index], this.latLngs[index + 1]);\n    }\n\n    if(dist < 1){\n      dist = (dist * 1000).toFixed(2) + 'm';\n    }else{\n      dist = dist.toFixed(2) + 'km';\n    }\n\n    return dist;\n  };\n\n  fn.addTo = function(map){\n    this.map = map;\n\n    this.polyline.setMap(map);\n    this.guidePolyline.setMap(map);\n  };\n\n  fn.remove = function(){\n    this.polyline.setMap(null);\n    this.guidePolyline.setMap(null);\n\n    this.polyline = null;\n    this.guidePolyline = null;\n\n    if(this.marker){\n      this.markerHandler.remove();\n      this.marker.setMap(null);\n      this.marker = null;\n    }\n\n    if(this.infoWindow){\n      this.infoWindowHandler.remove();\n      this.infoWindow.close();\n      this.infoWindow = null;\n    }\n  };\n\n  return Item;\n};\n},{\"../event/event-dispatcher\":5}],7:[function(require,module,exports){\nmodule.exports = function(MAPS){\n  var Map, fn;\n\n  Map = function(el, options){\n    this.events = {};\n    this.children = [];\n\n    this.map = new MAPS.Map(el, options);\n  };\n\n  fn = Map.prototype;\n\n  fn.addControl = function(el, position){\n    this.map.controls[position].push(el);\n  };\n\n  fn.addChild = function(){\n    var index = 0, count = arguments.length;\n    var child;\n\n    for(; index < count; index++){\n      child = arguments[index];\n\n      child.addTo(this.map);\n      this.children.push(child);\n    }\n  };\n\n  fn.removeChild = function(){\n    var index = 0, count = arguments.length;\n    var childIndex;\n\n    for(; index < count; index++){\n      if((childIndex = this.children.indexOf(arguments[index])) != -1){\n        this.children.splice(childIndex, 1)[0].remove();\n      }\n    }\n  };\n\n  fn.removeChildAll = function(){\n    var index = 0, count = this.children.length;\n\n    for( ; index < count; index++){\n      this.children[index].remove();\n    }\n\n    this.children.length = 0;\n  };\n\n  fn.addEventListener = function(type, listener){\n    if(!this.events[type]) this.events[type] = {};\n\n    this.events[type][listener] = MAPS.event.addListener(this.map, type, listener);\n  };\n\n  fn.removeEventListener = function(type, listener){\n    if(listener){\n      this.events[type][listener].remove();\n    }else{\n      for(listener in this.events[type]){\n        this.events[type][listener].remove();\n      }\n    }\n  };\n\n  fn.setCursor = function(type){\n    this.map.setOptions({ draggableCursor: type });\n  };\n\n  fn.setDraggable = function(value){\n    this.map.setOptions({ draggable: value });\n  };\n\n  return Map;\n};\n},{}]},{},[1]);\n"],"file":"app.js","sourceRoot":"/source/"}